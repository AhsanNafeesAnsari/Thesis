/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
//package fawzy;

import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.Point;
import java.util.HashMap;
import java.util.HashSet;

import javax.swing.JOptionPane;

/**
 *
 * @author cw
 */
public class NewJFrame extends javax.swing.JFrame {
    Image img;
    Graphics2D gfx;
    int nodesize = 40;
    int xc =20,yc=50;
    int id=0;
    int select=-1;
    int current;
    HashMap<Integer,Point> location;
   static HashMap<Integer, HashSet> nodes;
   static int arr[][]; 
    
  
    

    /**
     * Creates new form NewJFrame
     */
    public NewJFrame() {
        initComponents();
        location = new HashMap<>();
        nodes= new     HashMap<> ();

        
       img= panel.createImage(panel.getWidth(),panel.getHeight());
       gfx = (Graphics2D) img.getGraphics();
        
    
    }
    public void draw()
    { 
      gfx.setColor(Color.white);
        gfx.fillRect(0, 0, panel.getWidth(), panel.getHeight());
        
        for(int i=0; i<nodes.size();i++){
            Point pS = (Point) location.values().toArray()[i];
            for(Integer dest: (HashSet<Integer>) nodes.values().toArray()[i]){
                
                Point pD =(Point)location.get(dest);
                gfx.setColor(Color.red);
                
                gfx.setStroke(new BasicStroke(3) );
                gfx.drawLine(pS.x, pS.y, pD.x, pD.y);
                
            }
        }
        for(int i=0; i <location.size(); i++){
            if(i==current){
                gfx.setColor(Color.BLUE);
            
            } else {
                gfx.setColor(Color.GREEN);
            }
            
            Point p= (Point) location.values().toArray()[i];
            gfx.setColor(Color.red);
            gfx.fillOval(p.x - (nodesize /2 ), p.y -(nodesize/2),nodesize,nodesize);
            gfx.setColor(Color.orange);
            gfx.drawString("Node "+i,p.x + (nodesize /2 ) ,p.y +(nodesize/2) );
            
        
    }
      
        panel.getGraphics().drawImage(img, 0, 0, this);
        System.out.println(location);
        System.out.println(nodes);
    }
    private int selectedNode(int xcoordinate, int ycoordinate){
        for(int i=0; i<location.size();i++) {
        Point thePoint = (Point) location.values().toArray()[i];
        int deltaX = xcoordinate - (thePoint.x - nodesize /2);
        
        int deltaY = ycoordinate - (thePoint.y - nodesize /2);
        if (Math.sqrt(deltaX * deltaX
        + deltaY * deltaY) <= nodesize +6){
            return (int )location.keySet().toArray()[i];
        }
    }
        return -1;
    }
    
    @Override
    public void paint(Graphics g) {
        super.paint(g);
        draw();
    }
    /**
     
     
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panel = new javax.swing.JPanel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        calcCost = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        panel.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                panelMouseDragged(evt);
            }
        });
        panel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                panelMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                panelMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                panelMouseReleased(evt);
            }
        });

        javax.swing.GroupLayout panelLayout = new javax.swing.GroupLayout(panel);
        panel.setLayout(panelLayout);
        panelLayout.setHorizontalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 599, Short.MAX_VALUE)
        );
        panelLayout.setVerticalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 357, Short.MAX_VALUE)
        );

        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");

        calcCost.setText("calculate cost");
        calcCost.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calcCostActionPerformed(evt);
            }
        });
        jMenu2.add(calcCost);

        jMenuItem1.setText("Run");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem1);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void panelMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panelMousePressed

// TODO add your handling code here:
select = selectedNode(evt.getX(),evt.getY());
if(select==-1)
{

location.put(id, new Point (evt.getX(),evt.getY()));
nodes.put(id, new HashSet());
id++;
draw();
}
    }//GEN-LAST:event_panelMousePressed

    private void panelMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panelMouseReleased
        // TODO add your handling code here:
        int destination = selectedNode (evt.getX(),evt.getY());
        if (destination !=select && destination> -1&& select>-1)
        {
            nodes.get(destination).add(select);
            nodes.get(select).add(destination);
            
        }
        draw();
    }//GEN-LAST:event_panelMouseReleased

    private void panelMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panelMouseDragged
       
        if (select > -1 ){
            Point p = location.get(select);
            Image i = createImage(panel.getWidth(),panel.getHeight());
            Graphics g = i.getGraphics();
            g.drawImage(img, 0, 0, this);
            g.drawLine(p.x, p.y, evt.getX(), evt.getY());
            panel.getGraphics().drawImage(i, 0, 0, this);
        }// TODO add your handling code here:
    }//GEN-LAST:event_panelMouseDragged

    private void panelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panelMouseClicked
   if (evt.getClickCount()==1)
   {
 current = select;
draw();
        }
   else if(evt.getClickCount()==2){
       for(Integer dest: (HashSet<Integer>) nodes.values().toArray()[select]){
           
       
         int w=  Integer.parseInt(JOptionPane.showInputDialog(this," Node"+select+"->"+" Node "+dest , "Enter cost", JOptionPane.QUESTION_MESSAGE));
         arr[select][dest]=w;
       }
   }
        
    }//GEN-LAST:event_panelMouseClicked

    private void calcCostActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calcCostActionPerformed
        arr = new int[nodes.size()][nodes.size()];
for(int row=0; row<arr.length; row++){
    for(int col=0; col< arr[row].length; col++){
        System.out.print(arr[row][col]+"\t");
    }
    System.out.println("");
    }

// TODO add your handling code here:
    }//GEN-LAST:event_calcCostActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
       for(int row=0; row<arr.length; row++){
    for(int col=0; col< arr[row].length; col++){
        System.out.print(arr[row][col]+"\t");
    }
    System.out.println("");
    }

        

    }//GEN-LAST:event_jMenuItem1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem calcCost;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel panel;
    // End of variables declaration//GEN-END:variables
}
